<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd

	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!--开启注解支持-->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters>
            <!--自动将requestbody里的json字符串的entity 转换为对应的对象实例-->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 使用默认模式处理静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- 设置使用注解的类所在的jar包 annotation-config="true" 隐式的向Spring容器注册-->
    <context:component-scan base-package="com" annotation-config="true"/>

    <!--异常处理器-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.bind.MissingServletRequestParameterException">404</prop>
                <prop key="org.springframework.beans.TypeMismatchException">404</prop>
                <prop key="cn.bj.chineseall.exception.BusinessException">500</prop>
            </props>
        </property>
    </bean>

    <!--拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.controller.Interceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--spring 4.1 jsonp支持-->
    <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="jsonpParameterNames">
            <set>
                <value>jsonp</value>
                <value>callback</value>
            </set>
        </property>
    </bean>

    <!--内容协商视图解析器 根据请求头的不同使用不同的响应-->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <!--设置内容协商管理器-->
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <!--json 视图类，但是不支持jsop，所以自己实现jsonp 视图解析类-->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <!--将java对象转换为xml-->
                    <property name="marshaller">
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
                    </property>
                </bean>
            </list>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="prefix">
                        <value>/WEB-INF/view/</value>
                    </property>
                    <property name="suffix">
                        <value>.jsp</value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" value="application/json"/>
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <!--忽略请求头-->
        <property name="ignoreAcceptHeader" value="false"/>
        <!-- 扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 注：此项由默认后缀匹配 -->
        <property name="mediaTypes">
            <props>
                <prop key="json">application/json</prop>
                <prop key="xml">application/xml</prop>
                <prop key="html">text/html</prop>
                <prop key="jsonp">application/javascript</prop>
            </props>
        </property>
    </bean>
</beans>